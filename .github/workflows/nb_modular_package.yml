# This workflow will build a Java project with Ant
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-ant

name: nbm modular package

on:
  workflow_dispatch:
jobs:
  package:
    name: Create package
    runs-on: ubuntu-latest
    steps:
      - name: Create package
        run: echo "package"
  build:
    needs: package 
    strategy:
      matrix:
        label: [18, 19, 20, 21, 22, 23, 24, 25]
        include:
          - label: 18
            version: 18-7d33005615b3c744564f3d38ab9ef14bf8c3ec44
            java: 8
          - label: 19
            version: 19-ba85468772292fd64f188f4022f9d49f77f00b89
            java: 8
          - label: 20
            version: 20-91f9ed846ac143b52d50b5ea323a42c2f7e78392
            java: 8
          - label: 21
            version: 21-b15c9b7692b2764be5a997d056e2283b72ae9131 
            java: 8
          - label: 22
            version: 22-0d0bfcf3faf364a2643238f2a44e1bb6eb8217bd
            java: 8
          - label: 23
            version: 23-2985f1fa57ce0c1877bad0f86d5e5504d65f9286
            java: 11
          - label: 24
            version: 24-6308a54f5ac18a75f460d86cc9bb8d4cc7213564
            java: 11
          - label: 25
            version: 25-0f82d968998b78ef4d323537d1149eb68e747d9a
            java: 17
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '${{ matrix.java }}'
        distribution: 'temurin'
    - name : get version
      run: echo "::set-output name=version::$(grep 'OpenIDE-Module-Specification-Version'  ./manifest.mf | cut -d':' -f 2-)"
      id: nbm_version
    - name: Set version
      run: echo ${{ steps.nbm_version.outputs.version }}    
    - name : prepare the files from project
      run : mkdir -p  nb-plugin-package/src/main/java
    - name : prepare the files from project  
      run : mkdir -p nb-plugin-package/src/main/nbm
    - name : prepare the files from project  
      run : mkdir -p nb-plugin-package/src/main/resources/org/netbeans/modules/php/laravel
    - name : copy main app java
      run : cp -rf ./src/org nb-plugin-package/src/main/java
    - name : copy base resources
      run : cp -rf ./src/org/netbeans/modules/php/laravel/resources nb-plugin-package/src/main/resources/org/netbeans/modules/php/laravel
    - name : create ui bundle resource 
      run : mkdir -p nb-plugin-package/src/main/resources/org/netbeans/modules/php/laravel/ui/customizer
    - name : copy bundle customizer
      run : cp  ./src/org/netbeans/modules/php/laravel/ui/customizer/Bundle.properties nb-plugin-package/src/main/resources/org/netbeans/modules/php/laravel/ui/customizer
    - name : create ui bundle options resource 
      run : mkdir -p nb-plugin-package/src/main/resources/org/netbeans/modules/php/laravel/ui/options
    - name : copy bundle laravel options
      run : cp  ./src/org/netbeans/modules/php/laravel/ui/options/Bundle.properties nb-plugin-package/src/main/resources/org/netbeans/modules/php/laravel/ui/options
    - name : prepare the files from project
      run : cp ./manifest.mf nb-plugin-package/src/main/nbm/manifest.mf
    - name : prepare the files from project  
      run : cp ./.github/pom.xml nb-plugin-package/pom.xml
    - name : prepare the files from project  
      run : cp ./nbproject/project.properties nb-plugin-package/project.properties
    - name : prepare the files from project  
      run : cp ./LICENSE nb-plugin-package/LICENSE
    - name : package nbm${{ matrix.label }}
      working-directory: ./nb-plugin-package
      env:
        NB_RELEASE_VERSION: ${{ matrix.label }}0 
        NB_META_INF: ${{ matrix.version }}
      run : echo NB_RELEASE_VERSION | mvn package  
    - name : upload nbm ${{ matrix.label }}
      uses: actions/upload-artifact@v4
      with:
        name: php-laravel-nbm-${{ matrix.label }}
        path: ./nb-plugin-package/target/nbm/*.nbm
